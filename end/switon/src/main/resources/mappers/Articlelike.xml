<?xml version="1.0" encoding="UTF-8"?>
<!-- mappers/User.xml -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="articlelike">
	
	<!-- 글좋아요 리스트 반환 -->
	<select id="selectArticleLikes" resultType="ArticleLike">
		select id, user_id, article_id
		from articlelike
	</select>
	
	<!-- 글좋아요 상세 정보 반환 -->
	<select id="selectArticleLike" resultType="ArticleLike">
		select id, user_id, article_id
		from articlelike
		where id = #{id}
	</select>
	
	<!-- 해당유저가 좋아요를 누른 글이라면 1개가 반환됨 -->
	<select id="selectArticleLikeByUser_Article" parameterType="ArticleLike" resultType="ArticleLike">
		select id, user_id, article_id
		from articlelike
		where user_id = #{user_id} and article_id = #{article_id}
	</select>
	
	<!-- 해당글의 좋아요 수 반환 -->
	<select id="likeCount" resultType="Integer">
    	select count(*) as cnt
    	from articlelike
    	where article_id = #{article_id}
	</select>
	
	<!-- 글좋아요 등록 -->
	<insert id="insertArticleLike" parameterType="ArticleLike">
		insert into articlelike(user_id, article_id)
		values (#{user_id}, #{article_id})
	</insert>

	<!-- 글좋아요 삭제 -->
	<delete id="deleteArticleLike">
		delete from articlelike
   		where id = #{id}
	</delete>

	<!-- 해당 유저가 누른 글좋아요 삭제 -->
	<delete id="deleteArticleLikeByUser">
		delete from articlelike
   		where user_id = #{user_id} and article_id = #{article_id}
	</delete>
	
	<!-- 한 스터디에서 한 유저가 받은 좋아요 수를 반환한다. -->
	<select id="cntLikesUserGot" parameterType="UserStudyDTO" resultType="Integer">
		select count(*) as cnt
		from articlelike
		where article_id in (select id from article
							where user_id = #{user_id})
		and article_id in (select id from article
		                    where board_id in (select id from board 
											where study_id = #{study_id}))
	</select>
	
	<!-- 한 스터디에서 한 유저가 최근에 받은 좋아요 아이디를 하나 반환한다. -->
	<select id="selectRecentLikeId" parameterType="UserStudyDTO" resultType="Integer">
		select id
		from articlelike
		where article_id in (select id from article
							where user_id = #{user_id})
		and article_id in (select id from article
		                    where board_id in (select id from board 
											where study_id = #{study_id}))
		order by id desc
		limit 1
	</select>

</mapper>